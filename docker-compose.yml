services:
  data-store:
    build:
      context: ../funding-service-design-post-award-data-store
    command: bash -c "flask db upgrade && flask run -p 8080 -h 0.0.0.0"
    volumes: [ '../funding-service-design-post-award-data-store:/app' ]
    ports:
      - 4001:8080
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/data_store
    depends_on:
      - database
  account-store:
    build:
      context: ../funding-service-design-account-store
    command: bash -c "flask db upgrade && flask run -p 8080 -h 0.0.0.0"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@database:5432/account_store
    volumes: [ '../funding-service-design-account-store:/app' ]
    ports:
      - 3003:8080
    depends_on:
      - database
  authenticator:
    build:
      context: ../funding-service-design-authenticator
    volumes: [ '../funding-service-design-authenticator:/app' ]
    command: bash -c "python -m debugpy --listen 0.0.0.0:5678 -m flask run -p 8080 -h 0.0.0.0"
    ports:
      - 4004:8080
      - 5684:5678
    depends_on:
      - redis-data
      - account-store
    environment:
      - REDIS_INSTANCE_URI=redis://redis-data:6379
      - ACCOUNT_STORE_API_HOST=http://account-store:8080
      - AUTHENTICATOR_HOST=http://localhost:4004
      - POST_AWARD_FRONTEND_HOST=http://localhost:4002
      - POST_AWARD_SUBMIT_HOST=http://localhost:4003
      #  Uncomment to test Azure AD locally once credentials are set in .env
#      - AZURE_AD_CLIENT_ID=${AZURE_AD_CLIENT_ID:?err}
#      - AZURE_AD_CLIENT_SECRET=${AZURE_AD_CLIENT_SECRET:?err}
#      - AZURE_AD_TENANT_ID=${AZURE_AD_TENANT_ID:?err}
  frontend:
    build:
      context: ../funding-service-design-post-award-data-frontend
      dockerfile: Dockerfile
    volumes: [ '../funding-service-design-post-award-data-frontend:/app' ]
    command: bash -c "flask run -p 8080 -h 0.0.0.0"
    depends_on:
      - data-store
      - authenticator
    environment:
      - FLASK_ENV=development
      - AUTHENTICATOR_HOST=http://localhost:4004
      - DATA_STORE_API_HOST=http://data-store:8080
    ports:
      - 4002:8080
      - 5688:5678
  redis-data:
    image: redis
    ports:
      - 6379:6379
  database:
    image: postgres
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=account_store,data_store
    ports:
      - 5432:5432
  submit:
    build:
      context: ../funding-service-design-post-award-submit
      dockerfile: Dockerfile
    volumes: [ '../funding-service-design-post-award-submit:/app' ]
    command: bash -c "flask run -p 8080 -h 0.0.0.0"
    depends_on:
      - data-store
      - authenticator
    environment:
      - FLASK_ENV=development
      - AUTHENTICATOR_HOST=http://localhost:4004
      - DATA_STORE_API_HOST=http://data-store:8080
    ports:
      - 4003:8080
      - 5689:5678

